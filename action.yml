name: 'Positionless Analyzer'
description: 'A Go static analyzer that detects positional struct literal initialization'
author: 'flaticols'

branding:
  icon: 'check-circle'
  color: 'blue'

inputs:
  path:
    description: 'Path to analyze (default: ./...)'
    required: false
    default: './...'
  fix:
    description: 'Apply suggested fixes automatically'
    required: false
    default: 'false'
  include-generated:
    description: 'Include generated files in analysis'
    required: false
    default: 'false'
  version:
    description: 'Version of positionless to use (default: latest)'
    required: false
    default: 'latest'

runs:
  using: 'composite'
  steps:
    - name: Download positionless
      shell: bash
      run: |
        # Determine version
        VERSION="${{ inputs.version }}"
        if [ "$VERSION" = "latest" ]; then
          VERSION=$(curl -s https://api.github.com/repos/flaticols/positionless/releases/latest | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')
        fi
        
        # Determine platform and architecture
        OS=$(uname -s)
        ARCH=$(uname -m)
        
        # Map to release naming convention
        case "$OS" in
          Linux) PLATFORM="Linux" ;;
          Darwin) PLATFORM="Darwin" ;;
          *) echo "Unsupported OS: $OS"; exit 1 ;;
        esac
        
        case "$ARCH" in
          x86_64) ARCH="x86_64" ;;
          aarch64|arm64) ARCH="arm64" ;;
          i386|i686) ARCH="i386" ;;
          *) echo "Unsupported architecture: $ARCH"; exit 1 ;;
        esac
        
        # Download and extract
        FILENAME="positionless_${PLATFORM}_${ARCH}.tar.gz"
        URL="https://github.com/flaticols/positionless/releases/download/${VERSION}/${FILENAME}"
        
        echo "Downloading positionless ${VERSION} for ${PLATFORM}_${ARCH}..."
        curl -L -o positionless.tar.gz "$URL"
        tar -xzf positionless.tar.gz
        chmod +x positionless
        
        # Add to PATH
        echo "$PWD" >> $GITHUB_PATH

    - name: Run positionless analyzer
      shell: bash
      run: |
        FLAGS=""
        if [ "${{ inputs.fix }}" == "true" ]; then
          FLAGS="$FLAGS -fix"
        fi
        if [ "${{ inputs.include-generated }}" == "true" ]; then
          FLAGS="$FLAGS -generated"
        fi
        
        echo "Running: positionless $FLAGS ${{ inputs.path }}"
        positionless $FLAGS ${{ inputs.path }}